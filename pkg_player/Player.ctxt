#BlueJ class context
comment0.params=pCurrentRoom
comment0.target=Player(Room)
comment0.text=\n\ Constructeur\ \:\ On\ initialise\ seulement\ la\ salle\ courante.\n\ @param\ pCurrentRoom\ Salle\ d'o\u00F9\ d\u00E9marre\ le\ joueur\n
comment1.params=
comment1.target=Room\ getCurrentRoom()
comment1.text=\n\ getCurrentRoom()\ \:\ \n\ @return\ Renvoi\ la\ salle\ courante\n
comment10.params=
comment10.target=java.lang.String\ inventory()
comment10.text=\n\ getPlayerItem()\ \:\ Permet\ de\ r\u00E9cup\u00E9rer\ l'inventaire\ du\ joueur\ \n\ @return\ String\ renvoi\ l'inventaire\ format\u00E9\n
comment11.params=
comment11.target=ItemList\ getItemList()
comment11.text=\n\ getItemList()\ \:\ Permet\ de\ r\u00E9cup\u00E9rer\ la\ liste\ d'item\n\ @param\ pName\ Nom\ auquel\ est\ associ\u00E9\ l'item\n\ @return\ ItemList\ retourne\ l'itemlist\ du\ joueur\n
comment12.params=
comment12.target=java.lang.String\ back()
comment12.text=\n\ back()\ \:\ retourne\ \u00E0\ la\ pi\u00E8ce\ pr\u00E9c\u00E9dente\n\ @return\ Renvoi\ la\ description\ de\ la\ pi\u00E8ce.\n
comment13.params=
comment13.target=java.lang.String\ look()
comment13.text=\n\ look()\ \:\ affiche\ le\ lieu\ et\ les\ sorties\ possibles\n\ @return\ La\ description\ de\ la\ Room\ courante\ et\ les\ items\ du\ joueurs\n
comment14.params=pFood
comment14.target=java.lang.String\ eat(java.lang.String)
comment14.text=\n\ eat()\ \:\ affiche\ un\ simple\ message\n\ @return\ une\ String\ qui\ dit\ que\ l'on\ a\ manger\n
comment15.params=pBeamer
comment15.target=java.lang.String\ charge(java.lang.String)
comment15.text=\n\ charge()\ \:\ charge\ le\ beamer\n\ @return\ une\ String\ qui\ dit\ que\ le\ beamer\ est\ charg\u00E9\ ou\ qu'il\ n'est\ pas\ disponible\n
comment16.params=pBeamer
comment16.target=java.lang.String\ fire(java.lang.String)
comment16.text=\n\ fire()\ \:\ d\u00E9charge\ le\ beamer\n\ @return\ une\ String\ qui\ dit\ que\ le\ beamer\ est\ d\u00E9charg\u00E9\ ou\ qu'il\ n'est\ pas\ charg\u00E9\n
comment2.params=pCurrentRoom
comment2.target=void\ setCurrentRoom(Room)
comment2.text=\n\ setCurrentRoom()\ \:\ Permet\ de\ modifier\ la\ pi\u00E8ce\ courante.\n
comment3.params=
comment3.target=boolean\ hasLastRoom()
comment3.text=\n\ hasLastRoom()\n\ @return\ Renvoi\ true\ si\ il\ y\ a\ une\ salle\ pr\u00E9c\u00E9dente\n
comment4.params=
comment4.target=Room\ getLastRoom()
comment4.text=\n\ getLastRoom()\ \:\ Permet\ de\ r\u00E9cup\u00E9rer\ la\ derni\u00E8re\ Room\n\ @return\ Renvoi\ la\ derni\u00E8re\ Room\n
comment5.params=pLastRoom
comment5.target=void\ setLastRoom(Room)
comment5.text=\n\ setLastRoom()\ \:\ Ajoute\ une\ salle\ \u00E0\ la\ Stack\ des\ salles\ pr\u00E9c\u00E9dantes\n\ @param\ pLastRoom\ Room\ \u00E0\ ajouter\ \u00E0\ la\ Stack\n
comment6.params=pNextRoom
comment6.target=void\ changeRoom(Room)
comment6.text=\n\ changeRoom()\n\ @param\ pNextRoom\ nom\ de\ la\ Room\ o\u00F9\ aller\n
comment7.params=
comment7.target=int\ getTimeLimit()
comment7.text=\n\ getTimeLimit()\ \:\ Permet\ de\ r\u00E9cup\u00E9rer\ le\ temps\ restant\n\ @return\ Renvoi\ le\ temps\ restant\n
comment8.params=pName\ pRoom
comment8.target=java.lang.String\ pickUpItem(java.lang.String,\ Room)
comment8.text=\n\ pickUpItem()\ \:\ Permet\ de\ r\u00E9cup\u00E9rer\ un\ item\ dans\ une\ Room\n\ @param\ pName\ Nom\ de\ l'item\ \u00E0\ r\u00E9cup\u00E9rer\n\ @param\ pRoom\ Room\ o\u00F9\ se\ trouve\ actuellement\ l'objet\n\ @return\ String\ qui\ dit\ si\ l'objet\ a\ \u00E9t\u00E9\ prit,\ est\ trop\ lourd,\ si\ l'\u00E9l\u00E9ment\ n'est\ pas\ dans\ la\ salle.\n
comment9.params=pName\ pRoom
comment9.target=java.lang.String\ dropItem(java.lang.String,\ Room)
comment9.text=\n\ dropItem()\ \:\ Permet\ de\ poser\ un\ item\ dans\ une\ Room\n\ @param\ pName\ Nom\ de\ l'item\ \u00E0\ d\u00E9poser\n\ @param\ pRoom\ Room\ o\u00F9\ se\ trouve\ le\ joueur\n\ @return\ String\ qui\ dit\ si\ l'objet\ \u00E0\ \u00E9t\u00E9\ d\u00E9pos\u00E9,\ ou\ si\ il\ n'est\ pas\ pr\u00E9sent\ dans\ l'inventaire.\n
numComments=17
